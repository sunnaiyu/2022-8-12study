package com.sunnaiyu.day;
/*
正则表达式
从一个文章中找到所有的邮箱
看看输入的手机号是否合法
身份证号

又叫规则表达式,regular Expression Regex
判断字符串 核心功能处理文本

正则表达式不局限于某种语言，

hello world

元字符
.:匹配除了换行符之外的任意字符
\w匹配字母或数字或下划线或汉字
\s代表空格
\d匹配数字
\b匹配单词的开头或结束
\^匹配字符串的开始
\$匹配字符串的结束

匹配8位数字的qq号:^\d\d\d\d\d\d\d\d$
匹配1开头11位数字:^1\d\d\d\d\d\d\d\d\d\d$

重复限定符
*：代表重复0次或者更多次
+：重复1次或更多次
?：重复-次或1次
{n,}:重复n次
{n,}:重复n次或更多次
{n,m}:重复n到m次

匹配8位数字的QQ号: ^\d{8}$
匹配1开头11位数手机号:^1\d{10}$

银行卡号13~18位：^\d{14,18}$
匹配以a开头，0个或多个b结尾的字符串^ab*$

分组
限定符的作用与它相邻的最左边的一个字符起作用，
如果想要ab同时被限定怎么办？
正则表达式中可以用小括号分组，括号里的内容会作为一个整体。
^(ab)*$

转义
匹配字符串中包含0到多个ab开头的；^((\ab\))*

手机号：
| 或
联通手机号：^(130|131|132|134|186)\d{8}$

区间：
正则表达式提供了一个[]表示区间


0~9:[0-9]
A~Z:[A-z]
限定某些数字:[130]
^((13[0-2])/(15[5-6])/(18(5-6)) )\d{8}$

反义：\w：不是字母，数字，下划线，中文
\S：不是空格
\D:不是数字
\B:不是单词开头或结束
[^x]:除了x以外的任意字符
[^aeiou]:匹配除了aeiou的任意字符

常见的正则表达式：
匹配中文的字符：[],匹配的是ASCⅡ码
邮箱:^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$
国内的电话号码：0431-81234567
^\d[3,4]-\d[8]$
QQ号:^[1-9][0-9]{4,11}$




* */
public class Ch01 {
    public static void main(String[] args) {
        String reg="^\\d\\d\\d\\d\\d\\d\\d\\d$";
        String s="^\\d{8}$";
        String s1="^((\\ab\\))*";
        System.out.println((int)'一');
    }
}
